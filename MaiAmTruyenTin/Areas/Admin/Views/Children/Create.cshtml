@model Model.EF.Children

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@section jsFooter {
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })
        $('#btnSelectImage1').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage1').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/admin/js/plugins/ckeditor/config.js',
        });
        WebFontConfig = {
            google: {
                families: [
                    'Source+Code+Pro:400,700:latin',
                    'Roboto:400,300,500,700,400italic:latin'
                ]
            }
        };
    </script>
}
<div id="page_content_inner">
    <h2 class="heading_b uk-margin-bottom">QUẢN LÝ TRẺ EM</h2>
    <div class="md-card uk-margin-large-bottom">
        <div class="md-card-content">
            <h3 style="border: 1px solid rgb(33, 150, 243); padding: 15px 15px; background-color: rgb(33, 150, 243); color: white; font-size: 15px;">THÊM MỚI TRẺ EM</h3>
            <div class="md-card-content">
                @using (Html.BeginForm("Create", "Children", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <h3 style="color: rgb(124, 179, 66)">I. THÔNG TIN CƠ BẢN</h3>
                    <div class="uk-grid">
                        <div class="uk-width-1-3">
                            <label>@Html.DisplayNameFor(model => model.Code)<span class="req">*</span></label>
                            <input type="text" name="Code" id="Code" required class="md-input" />
                        </div>
                        <div class="uk-width-1-3">
                            <label>@Html.DisplayNameFor(model => model.FullName)<span class="req">*</span></label>
                            <input type="text" name="FullName" id="FullName" required class="md-input" />
                        </div>
                        <div class="uk-width-1-3">
                            <div class="uk-form-row">
                                <label>@Html.DisplayNameFor(model => model.Age)<span class="req">*</span></label>
                                <input type="text" name="Age" id="Age" required class="md-input" />
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-3 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.DateOfBirth)<span class="req">*</span></label>
                                <input type="date" name="DateOfBirth" required id="DateOfBirth" class="md-input" />
                            </div>
                        </div>
                        <div class="uk-width-medium-1-3 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.Gender)<span class="req">*</span></label>
                                <select class="md-input" id="Gender" name="Gender" required="required">
                                    <option value="">-- Chọn giới tính --</option>
                                    <option value="Nam">Nam</option>
                                    <option value="Nữ">Nữ</option>
                                </select>
                            </div>
                        </div>
                        <div class="uk-width-medium-1-3 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.EducationID)<span class="req">*</span></label>
                                @Html.DropDownListFor(model => model.EducationID, ViewBag.EducationName as SelectList, "--Chọn học vấn--", new { @class = "md-input", required = "required" })
                            </div>
                            @*<input type="text" name="EducationID" id="EducationID" class="md-input" />*@
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-1-1">
                            <div class="uk-form-row">
                                <label>@Html.DisplayNameFor(model => model.EnrollReason)<span class="req">*</span></label>
                                <textarea cols="30" rows="2" class="md-input" id="EnrollReason" name="EnrollReason"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.CategoryID)<span class="req">*</span></label>
                                @Html.DropDownListFor(model => model.CategoryID, ViewBag.CategoryList as SelectList, "--Chọn hoàn cảnh trẻ--", new { @class = "md-input" })
                            </div>
                        </div>
                    </div>
                    <h3 style="color: rgb(33, 150, 243)">II. BẢO HIỂM XÃ HỘI VÀ CHI PHÍ</h3>    
                    //BẢO HIỂM XÃ HỘI
                    <div class="uk-grid">
                        <p class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.SocialInsurance)</label>
                            <input type="text" name="SocialInsurance" id="SocialInsurance" class="md-input" />
                        </p>
                        <div class="uk-width-medium-1-3 ">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.BoughtDate)</label>
                                <input type="date" name="BoughtDate" id="BoughtDate" class="md-input" />
                            </div>
                        </div>

                        <div class="uk-width-medium-1-3 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.EndDate)</label>
                                <input type="date" name="EndDate" id="EndDate" class="md-input" />
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.FoodExpenses)<span class="req">*</span></label>
                            <input type="text" name="FoodExpenses" id="FoodExpenses" class="md-input" />
                        </div>
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.EducationExpenses)<span class="req">*</span></label>
                            <input type="text" name="EducationExpenses" id="EducationExpenses" class="md-input" />
                        </div>
                    </div>
                    <h3 style="color: rgb(255, 160, 0)">III. HỒ SƠ - GIẤY TỜ</h3>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.SchoolReportID)<span class="req">*</span></label>
                            <input type="text" name="SchoolReportID" id="SchoolReportID" class="md-input" />
                        </div>
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.XFamilyBookID)<span class="req">*</span></label>
                            <input type="text" name="XFamilyBookID" id="XFamilyBookID" class="md-input" />
                        </div>
                    </div>
                    <div class="uk-grid">
                        <p class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Hk01)<span class="req">*</span></label>
                            <input type="checkbox" data-val="true" id="Hk01" name="Hk01" value="true" data-md-icheck>
                        </p>
                        <div class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Hk02)<span class="req">*</span></label>
                            <input type="checkbox" data-val="true" id="Hk02" name="Hk02" value="true" data-md-icheck>
                        </div>
                        <div class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Confirmation)<span class="req">*</span></label>
                            <input type="checkbox" data-val="true" id="Confirmation" name="Confirmation" value="true" data-md-icheck>
                        </div>
                    </div>
                    <h3 style="color: rgb(124, 179, 66)">IV. THAM VẤN TÂM LÝ</h3>
                    <div class="uk-grid">
                        <p class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Problem)</label>
                            <input type="text" name="Problem" id="Problem" class="md-input" />
                        </p>
                        <div class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Time)</label>
                            <input type="text" name="Time" id="Time" class="md-input" />
                        </div>
                        <div class="uk-width-medium-1-3 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Ticket)</label>
                            <input type="text" name="Ticket" id="Ticket" class="md-input" />
                        </div>
                    </div>
                    <h3 style="color: rgb(33, 150, 243)">V. THÔNG TIN KHỞI TẠO</h3>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>@Html.DisplayNameFor(model => model.CreatedBy)<span class="req">*</span></label>
                                @Html.DropDownListFor(model => model.CreatedBy, ViewBag.UserID as SelectList, "-- Vui lòng chọn người khởi tạo --", new { @class = "md-input", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.CreatedDate)<span class="req">*</span></label>
                            <input type="text" name="CreatedDate" id="CreatedDate" class="md-input" value="@DateTime.Now.ToString()" />
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.Image)<span class="req">*</span></label>
                        </div>
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>@Html.DisplayNameFor(model => model.BirthCertificate)<span class="req">*</span></label>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-1-2" style="display:inline">
                            <div class="uk-form-file md-btn md-btn-success" id="btnSelectImage">
                                CHỌN
                            </div>
                            <div class="uk-form-file uk-text-primary"><input id="txtImage" required name="Image" class="k-input" readonly></div>
                        </div>
                        <div class="uk-width-1-2" style="display:inline">
                            <div class="uk-form-file md-btn md-btn-success" id="btnSelectImage1">
                                CHỌN
                            </div>
                            <div class="uk-form-file uk-text-primary"><input id="txtImage1" required name="BirthCertificate" class="k-input" readonly></div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-2 parsley-row">
                        </div>
                        <div class="uk-width-medium-1-2 parsley-row">
                        </div>
                    </div>
                    <div class="uk-input-group">
                        <input type="submit" class="md-btn md-btn-primary" value="Tạo mới" />
                        <a href="@Url.Action("Index", "Children")" class="md-btn md-btn-danger">HỦY BỎ</a>
                        <a href="@Url.Action("Index", "Children")" class="md-btn md-btn-warning">QUAY LẠI DANH SÁCH</a>
                    </div>

                }
            </div>

        </div>
    </div>
</div>
<script>
    (function () {
        var wf = document.createElement('script');
        wf.src = ('https:' == document.location.protocol ? 'https' : 'http') +
            '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
        wf.type = 'text/javascript';
        wf.async = 'true';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(wf, s);
    })();
</script>
